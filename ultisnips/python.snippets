# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet pig "let pyright ignore warnings and errors" w
  # pyright: ignore
endsnippet

snippet ifmain "create a cmdline entry point for this script" b
if __name__ == '__main__':
    
endsnippet

snippet pypath "append current path to PYTHONPATH" b
import os, sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
$1
sys.path.remove(os.path.dirname(os.path.abspath(__file__)))
endsnippet

snippet jusep "code cell separator in Jupytext" b
# %%

endsnippet

snippet ilog "logging setup" b
import logging
logging.basicConfig(
    format='%(asctime)s - %(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s',
    level=logging.INFO)
endsnippet
