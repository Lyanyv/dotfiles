{
  "suggest.minTriggerInputLength": 2,
  "suggest.virtualText": true,
  "suggest.enableFloat": true,
  "suggest.asciiCharactersOnly": true,
  "suggest.asciiMatch": false,
  "suggest.formatItems": [ "kind", "abbr", "menu", "shortcut" ],
  "suggest.completionItemKindLabels": {
    "text": "",
    "method": "",
    "function": "",
    "constructor": "",
    "field": "",
    "variable": "",
    "class": "",
    "interface": "",
    "module": "",
    "property": "",
    "unit": "",
    "value": "",
    "enum": "",
    "keyword": "",
    "snippet": "",
    "color": "",
    "file": "",
    "reference": "",
    "folder": "",
    "enumMember": "",
    "constant": "",
    "struct": "",
    "event": "",
    "operator": "",
    "typeParameter": "",
    "default": ""
  },

  "coc.preferences.jumpCommand": "tabe",
  "coc.preferences.currentFunctionSymbolAutoUpdate": true,
  // "codeLens.enable": true,

  "list.floatPreview": true,
  "list.alignColumns": true,
  "list.selectedSignText": "",
  "list.source.diagnostics.defaultOptions": [ "--auto-preview", "--no-quit", "--normal" ],
  "diagnostic.errorSign": "",
  "diagnostic.warningSign": "",
  "diagnostic.infoSign": "",
  "diagnostic.hintSign": "",
  "list.source.symbols.defaultOptions": [ "--auto-preview", "--no-quit", "--interactive" ],

  // coc-lists
  "session.saveOnVimLeave": false,
  "list.source.files.defaultOptions": [ "--no-quit" ],
  "list.source.files.defaultArgs": [ "-folder" ],
  "list.source.grep.defaultOptions": [ "--auto-preview", "--no-quit", "--interactive" ],
  "list.source.grep.defaultArgs": [ "-folder", "-regex" ],
  "list.source.grep.args": [],
  "list.source.lines.defaultOptions": [ "--auto-preview", "--no-quit", "--interactive" ],
  "list.source.mru.defaultOptions": [ "--auto-preview", "--no-quit" ],
  "list.source.mru.defaultArgs": [ "-A" ],

  // coc-word
  "coc.source.word.priority": 0,
  "coc.source.word.filetypes": [ "text", "tex", "latex", "markdown" ],

  // coc-snippets
  "snippets.autoTrigger": true,
  "snippets.ultisnips.enable": true,
  "snippets.ultisnips.directories": [],
  "snippets.snipmate.enable": false,
  "snippets.massCode.enable": false,

  // coc-pyright
  "python.linting.enabled": true,
  "python.linting.lintOnSave": true,
  "python.linting.maxNumberOfProblems": 1024,
  "python.linting.ruffEnabled": true,
  "python.linting.ruffArgs": [ "--ignore=E126,E501,W503,W504" ],
  "python.linting.ruffStdin": true,
  "pyright.organizeimports.provider": "ruff",
  "python.formatting.provider": "yapf",
  "python.formatting.yapfArgs": [],

  "pyright.completion.importSupport": true,
  "pyright.completion.snippetSupport": true,
  "python.analysis.autoSearchPaths": true,
  "python.analysis.diagnosticMode": "openFilesOnly",
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.autoImportCompletions": false,
  "pyright.inlayHints.variableTypes": false,
  "pyright.inlayHints.functionReturnTypes": false,

  // coc-markdownlint
  "[markdown]": {
    "diagnostic.enableMessage": "never",
    "diagnostic.virtualText": true,
    "diagnostic.virtualTextAlign": "after",
    "diagnostic.virtualTextCurrentLineOnly": true,
  },
  "markdownlint.onOpen": true,
  // set this to true may cause this extension to stop working
  "markdownlint.onChange": false,
  "markdownlint.onSave": true,
  "markdownlint.config": {
    "default": true,
    "MD001": false,
    "MD003": { "style": "atx" },
    "MD004": { "style": "dash" },
    "MD007": {
      "indent": 4,
      "start_indented": false
    },
    "MD010": {
      "code_blocks": true,
      "spaces_per_tab": 4
    },
    "MD012": { "maximum": 2 },
    "MD013": false,
    "MD024": { "siblings_only": true },
    "MD028": false,
    // "MD029": { "style": "ordered" },
    "MD029": false,
    "MD032": false,
    "MD033": false,
    "MD036": false,
    "MD040": false,
    "MD041": false,
    "MD045": false,
    "MD046": { "style": "fenced" },
    "MD047": false,
    "MD048": { "style": "backtick" },
    "MD049": { "style": "asterisk" },
    "MD050": { "style": "asterisk" },
    "MD053": { "ignored_definitions": [
      "//"
    ]}
  },

  // coc-texlab

  // $HOME/.latexmkrc:
  // $pdf_mode = 5;
  // $postscript_mode = $dvi_mode = 0;
  // $pdf_previewer = 'start SumatraPDF %O %S';
  // $pdflatex = "pdflatex -file-line-error -halt-on-error -interaction=nonstopmode -synctex=-1 %O %S";
  // $xelatex = "xelatex -file-line-error -halt-on-error -interaction=nonstopmode -no-pdf -synctex=-1 %O %S";
  // # Always try to embed fonts, ignoring licensing flags
  // $xdvipdfmx = "xdvipdfmx -E -o %D %O %S";
  // $bibtex_use = 1;

  // SumatraPDF:
  // InverseSearchCmdLine = nvr --remote-silent +%l "%f"
  "texlab.build.args": [ "-pv" ],
  "texlab.forwardSearch.executable": "SumatraPDF",
  "texlab.forwardSearch.args": [
    "-reuse-instance", "%p", "-forward-search", "%f", "%l"
  ],
  "texlab.build.forwardSearchAfter": true,
  "texlab.chktex.onOpenAndSave": true,
  "texlab.chktex.onEdit": false,

  "semanticTokens.enable": false,
  // pyright ×: bad highlight
  // ccls ×: do not support
  // "[c][cpp][python]": { "semanticTokens.enable": false },

  // ccls
  "languageserver": {
    "ccls": {
      "command": "ccls",
      "filetypes": [ "c", "cpp", "cuda", "objc", "objcpp" ],
      "rootPatterns": [ ".ccls", "compile_commands.json" ],
      "initializationOptions": {
        "cache": { "directory": ".ccls-cache", "format": "binary" },
        "index": { "multiVersion": 0 },
        "highlight": { "lsRanges": true }
        // If the project is compiled with MSVC,
        // don't forget to set the compiler driver in .ccls to clang-cl
        // "clang.extraArgs": [
        //   "-fms-extensions",
        //   "-fms-compatibility",
        //   "-fdelayed-template-parsing"
        // ]
      }
    }
  }
}
